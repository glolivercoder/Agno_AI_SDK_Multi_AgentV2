version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: agno-gui-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: agno_gui
      POSTGRES_USER: agno_user
      POSTGRES_PASSWORD: agno_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agno_user -d agno_gui"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: agno-gui-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: agno-gui-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://agno_user:agno_password@postgres:5432/agno_gui
      - REDIS_URL=redis://redis:6379
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - AGNO_API_KEY=${AGNO_API_KEY}
      - MCP_CONTEXT7_API_KEY=${MCP_CONTEXT7_API_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Optional - for production deployment)
  nginx:
    image: nginx:alpine
    container_name: agno-gui-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
    profiles:
      - production

  # Frontend (Development)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: agno-gui-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: agno-gui-network