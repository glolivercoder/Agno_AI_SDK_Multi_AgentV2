╔════════════════════════════════════════════════════════════╗
║                  AGNO GUI INTERFACE                        ║
║                 INSTRUÇÕES RÁPIDAS                         ║
║                 v1.0.1                                     ║
╚════════════════════════════════════════════════════════════╝

🎯 INICIALIZAÇÃO RÁPIDA
════════════════════════════════════════════════════════════

1. 📦 PRIMEIROS PASSOS:
   • Certifique-se de ter Node.js 18+ instalado
   • Clone ou extraia os arquivos do projeto
   • Verifique se o Node.js está funcionando: npm --version

2. 🚀 INICIALIZAR SISTEMA:

   ⚡ OPÇÃO 1 - Instalação de Emergência (Recomendado):
   • Execute: .\install-emergency.bat
   • Instala apenas dependências que funcionam no Windows
   • Resolve problemas de compilação nativa automaticamente
   • Sistema básico 100% funcional

   ⚡ OPÇÃO 2 - PowerShell:
   • Abra o PowerShell no diretório do projeto
   • Execute: .\start-agno-gui.ps1
   • Instala dependências essenciais automaticamente
   • Funciona mesmo com problemas de dependências

   ⚡ OPÇÃO 3 - Dependências Completas:
   • Primeiro: .\start-agno-gui.ps1 (essenciais)
   • Depois: .\install-optional-deps.bat (completas)
   • Para funcionalidades avançadas

   ⚡ OPÇÃO 4 - Batch File:
   • Clique duplo em: INICIAR_AGNO_AGENTS.bat
   • OU via CMD: .\INICIAR_AGNO_AGENTS.bat

   ⚡ OPÇÃO 5 - Docker:
   • Execute: docker-compose up -d --build

3. 🔐 ACESSAR A APLICAÇÃO:
   • Frontend: http://localhost:3000
   • Backend API: http://localhost:8000
   • Database: localhost:5432
   • Redis: localhost:6379

4. 👥 CONTAS DE DEMONSTRAÇÃO:
   • Admin: admin@agnogui.com / password
   • User: user@agnogui.com / password

════════════════════════════════════════════════════════════
📊 MONITORE APLICATIVO
════════════════════════════════════════════════════════════

1. 🏥 VERIFICAR SAÚDE DO SISTEMA:
   • Execute: check_health.bat
   • OU: utils.bat health

2. 📋 VISUALIZAR LOGS EM TEMPO REAL:
   • Execute: view_logs.bat
   • OU: utils.bat logs

3. 🧹 LIMPAR E OTIMIZAR:
   • Execute: clear_logs.bat
   • OU: utils.bat clean

════════════════════════════════════════════════════════════
🛠️ COMANDOS ÚTEIS
════════════════════════════════════════════════════════════

• utils.bat start     - Iniciar todos os serviços
• utils.bat stop      - Parar todos os serviços
• utils.bat restart   - Reiniciar todos os serviços
• utils.bat health    - Verificar saúde do sistema
• utils.bat logs      - Visualizar logs
• utils.bat clean     - Limpar cache e logs
• utils.bat setup     - Configurar ambiente
• utils.bat update    - Atualizar aplicação
• utils.bat help      - Mostrar ajuda completa

════════════════════════════════════════════════════════════
🐳 DOCKER (OPCIONAL)
════════════════════════════════════════════════════════════

1. INICIAR COM DOCKER:
   docker-compose up -d --build

2. PARAR DOCKER:
   docker-compose down

3. VER LOGS DOCKER:
   docker-compose logs -f

════════════════════════════════════════════════════════════
🔧 CONFIGURAÇÃO
════════════════════════════════════════════════════════════

1. VARIÁVEIS DE AMBIENTE:
   • Copie .env.example para .env.local
   • Edite .env.local com suas chaves API
   • Execute: utils.bat setup

2. CHAVES API NECESSÁRIAS:
   • OPENROUTER_API_KEY (para modelos OpenRouter)
   • GEMINI_API_KEY (para modelos Gemini)
   • NEXTAUTH_SECRET (para autenticação)

════════════════════════════════════════════════════════════
📝 LOGS E DEBUGGING
════════════════════════════════════════════════════════════

• Diretório: logs/
• Frontend: logs\frontend.log
• Backend: logs\backend.log
• Sistema: logs\system_health.log
• Erros: logs\error.log

════════════════════════════════════════════════════════════
⚡ DICAS DE PERFORMANCE
════════════════════════════════════════════════════════════

• Use Docker para melhor isolamento
• Monitore logs regularmente
• Execute health checks periodicamente
• Mantenha dependências atualizadas
• Configure backup dos logs importantes

════════════════════════════════════════════════════════════
🚨 SUPORTE E AJUDA
════════════════════════════════════════════════════════════

• Documentação: README.md
• Logs detalhados: logs/README.md
• Troubleshooting: TROUBLESHOOTING.txt
• Ajuda: utils.bat help
• Problemas: Verifique logs primeiro
• GitHub Issues: Para bugs e features

════════════════════════════════════════════════════════════
📞 CONTATO
════════════════════════════════════════════════════════════

• Issues: GitHub Issues
• Email: support@agnogui.com
• Documentação: /docs

════════════════════════════════════════════════════════════
✅ STATUS ATUAL
════════════════════════════════════════════════════════════

• Frontend: ✅ Pronto
• Backend: ✅ Pronto
• Database: ✅ Pronto
• Docker: ✅ Pronto
• Logs: ✅ Pronto
• Monitoramento: ✅ Pronto

🎉 SISTEMA PRONTO PARA USO!
════════════════════════════════════════════════════════════