@echo off
chcp 65001 >nul
setlocal enabledelayedexpansion

:: =====================================================
:: AGNO GUI INTERFACE - SISTEMA DE INICIALIZA√á√ÉO
:: =====================================================
:: Vers√£o: 1.0.0
:: Data: %date%
:: =====================================================

title Agno GUI Interface - Sistema de Inicializa√ß√£o

:: Cores para output
set "GREEN=[92m"
set "YELLOW=[93m"
set "RED=[91m"
set "BLUE=[94m"
set "CYAN=[96m"
set "RESET=[0m"

echo.
echo %CYAN%‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó%RESET%
echo %CYAN%‚ïë                AGNO GUI INTERFACE v1.0.0                 ‚ïë%RESET%
echo %CYAN%‚ïë              Sistema de Inicializa√ß√£o                    ‚ïë%RESET%
echo %CYAN%‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù%RESET%
echo.

:: Verificar se est√° rodando como administrador
net session >nul 2>&1
if %errorLevel% == 0 (
    echo %GREEN%‚úì%RESET% Executando com privil√©gios de administrador
) else (
    echo %YELLOW%‚ö†%RESET% ATEN√á√ÉO: Recomenda-se executar como administrador
    echo.
)

:: =====================================================
:: 1. VERIFICA√á√ÉO DE DEPEND√äNCIAS
:: =====================================================

echo %BLUE%[1/5] Verificando depend√™ncias do sistema...%RESET%

:: Verificar Node.js
echo Verificando Node.js...
node --version >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=*" %%i in ('node --version') do set NODE_VERSION=%%i
    echo %GREEN%‚úì%RESET% Node.js encontrado: !NODE_VERSION!
) else (
    echo %RED%‚úó%RESET% Node.js n√£o encontrado!
    echo %RED%   Por favor, instale o Node.js 18+ do site oficial%RESET%
    echo %RED%   https://nodejs.org/%RESET%
    goto :error
)

:: Verificar npm
echo Verificando npm...
npm --version >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=*" %%i in ('npm --version') do set NPM_VERSION=%%i
    echo %GREEN%‚úì%RESET% npm encontrado: !NPM_VERSION!
) else (
    echo %RED%‚úó%RESET% npm n√£o encontrado!
    echo %RED%   npm deve vir com o Node.js%RESET%
    goto :error
)

:: Verificar Docker (opcional)
echo Verificando Docker...
docker --version >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=*" %%i in ('docker --version') do set DOCKER_VERSION=%%i
    echo %GREEN%‚úì%RESET% Docker encontrado: !DOCKER_VERSION!
    set DOCKER_AVAILABLE=1
) else (
    echo %YELLOW%‚ö†%RESET% Docker n√£o encontrado - Funcionamento limitado
    echo %YELLOW%   Docker √© opcional, mas recomendado para banco de dados%RESET%
    set DOCKER_AVAILABLE=0
)

:: Verificar Git
echo Verificando Git...
git --version >nul 2>&1
if %errorLevel% == 0 (
    for /f "tokens=*" %%i in ('git --version') do set GIT_VERSION=%%i
    echo %GREEN%‚úì%RESET% Git encontrado: !GIT_VERSION!
) else (
    echo %YELLOW%‚ö†%RESET% Git n√£o encontrado - Alguns recursos podem n√£o funcionar
)

echo.

:: =====================================================
:: 2. CONFIGURA√á√ÉO DO AMBIENTE
:: =====================================================

echo %BLUE%[2/5] Configurando ambiente...%RESET%

:: Criar diret√≥rio de logs se n√£o existir
if not exist "logs" (
    mkdir logs
    echo %GREEN%‚úì%RESET% Diret√≥rio de logs criado
)

:: Verificar se .env.local existe
if not exist ".env.local" (
    echo %YELLOW%‚ö†%RESET% Arquivo .env.local n√£o encontrado
    echo Copiando .env.example para .env.local...
    copy .env.example .env.local >nul 2>&1
    if !errorLevel! == 0 (
        echo %GREEN%‚úì%RESET% .env.local criado a partir do template
        echo %YELLOW%   Edite o arquivo .env.local com suas chaves API%RESET%
    ) else (
        echo %RED%‚úó%RESET% Erro ao criar .env.local
        goto :error
    )
) else (
    echo %GREEN%‚úì%RESET% .env.local encontrado
)

:: =====================================================
:: 3. INSTALA√á√ÉO DE DEPEND√äNCIAS
:: =====================================================

echo %BLUE%[3/5] Instalando depend√™ncias...%RESET%

:: Instalar depend√™ncias do npm
echo Instalando depend√™ncias do Node.js...
call npm install --legacy-peer-deps
if %errorLevel% == 0 (
    echo %GREEN%‚úì%RESET% Depend√™ncias instaladas com sucesso
) else (
    echo %RED%‚úó%RESET% Erro na instala√ß√£o das depend√™ncias
    echo Verifique se h√° conex√£o com a internet
    goto :error
)

:: =====================================================
:: 4. INICIALIZA√á√ÉO DOS SERVI√áOS
:: =====================================================

echo %BLUE%[4/5] Inicializando servi√ßos...%RESET%

:: Inicializar Docker se dispon√≠vel
if %DOCKER_AVAILABLE% == 1 (
    echo Iniciando servi√ßos Docker...
    docker-compose up -d --build > logs\docker_startup.log 2>&1

    if !errorLevel! == 0 (
        echo %GREEN%‚úì%RESET% Docker services iniciados
        echo %CYAN%   - PostgreSQL: http://localhost:5432%RESET%
        echo %CYAN%   - Redis: localhost:6379%RESET%
        echo %CYAN%   - Backend API: http://localhost:8000%RESET%
    ) else (
        echo %YELLOW%‚ö†%RESET% Erro ao iniciar Docker services
        echo Verifique o log: logs\docker_startup.log
    )
) else (
    echo %YELLOW%‚ö†%RESET% Docker n√£o dispon√≠vel - Iniciando apenas frontend
)

:: =====================================================
:: 5. INICIALIZA√á√ÉO DO FRONTEND
:: =====================================================

echo %BLUE%[5/5] Inicializando interface frontend...%RESET%

:: Iniciar servidor de desenvolvimento
echo Iniciando Next.js development server...
start "Agno GUI Frontend" cmd /k "npm run dev > logs\frontend.log 2>&1"

:: Aguardar um momento para o servidor iniciar
timeout /t 3 /nobreak >nul

:: Verificar se o servidor est√° rodando
curl -s http://localhost:3000 >nul 2>&1
if %errorLevel% == 0 (
    echo %GREEN%‚úì%RESET% Frontend iniciado com sucesso!
    echo %CYAN%   URL: http://localhost:3000%RESET%
) else (
    echo %YELLOW%‚ö†%RESET% Frontend pode ainda estar iniciando...
    echo %CYAN%   Verifique em alguns segundos: http://localhost:3000%RESET%
)

:: =====================================================
:: FINALIZA√á√ÉO E INSTRU√á√ïES
:: =====================================================

echo.
echo %CYAN%‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó%RESET%
echo %CYAN%‚ïë                 INICIALIZA√á√ÉO CONCLU√çDA                  ‚ïë%RESET%
echo %CYAN%‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù%RESET%
echo.

echo %GREEN%üéâ Agno GUI Interface iniciado com sucesso!%RESET%
echo.

if %DOCKER_AVAILABLE% == 1 (
    echo %CYAN%üìä Servi√ßos Dispon√≠veis:%RESET%
    echo %CYAN%   ‚Ä¢ Frontend: http://localhost:3000%RESET%
    echo %CYAN%   ‚Ä¢ Backend API: http://localhost:8000%RESET%
    echo %CYAN%   ‚Ä¢ Database: localhost:5432%RESET%
    echo %CYAN%   ‚Ä¢ Redis: localhost:6379%RESET%
) else (
    echo %CYAN%üìä Servi√ßos Dispon√≠veis:%RESET%
    echo %CYAN%   ‚Ä¢ Frontend: http://localhost:3000%RESET%
    echo %YELLOW%   ‚Ä¢ Backend: Execute manualmente em outro terminal%RESET%
)

echo.
echo %CYAN%üîê Contas de Demonstra√ß√£o:%RESET%
echo %CYAN%   ‚Ä¢ Admin: admin@agnogui.com / password%RESET%
echo %CYAN%   ‚Ä¢ User: user@agnogui.com / password%RESET%
echo.

echo %CYAN%üìù Logs dispon√≠veis em:%RESET%
echo %CYAN%   ‚Ä¢ logs\frontend.log%RESET%
echo %CYAN%   ‚Ä¢ logs\docker_startup.log%RESET%
echo.

echo %CYAN%üõ†Ô∏è  Comandos √öteis:%RESET%
echo %CYAN%   ‚Ä¢ Parar tudo: docker-compose down%RESET%
echo %CYAN%   ‚Ä¢ Ver logs: docker-compose logs -f%RESET%
echo %CYAN%   ‚Ä¢ Reiniciar: docker-compose restart%RESET%
echo.

echo %YELLOW%üí° Dicas:%RESET%
echo %YELLOW%   ‚Ä¢ Para desenvolvimento, deixe este terminal aberto%RESET%
echo %YELLOW%   ‚Ä¢ Use Ctrl+C para parar todos os servi√ßos%RESET%
echo %YELLOW%   ‚Ä¢ Verifique os logs se houver problemas%RESET%
echo.

echo Pressione qualquer tecla para fechar...
pause >nul

goto :eof

:: =====================================================
:: TRATAMENTO DE ERROS
:: =====================================================

:error
echo.
echo %RED%‚ùå ERRO ENCONTRADO%RESET%
echo.
echo %RED%Verifique os seguintes pontos:%RESET%
echo %RED%‚Ä¢ Node.js 18+ instalado%RESET%
echo %RED%‚Ä¢ Conex√£o com internet%RESET%
echo %RED%‚Ä¢ Permiss√µes de administrador (recomendado)%RESET%
echo %RED%‚Ä¢ Docker instalado (opcional)%RESET%
echo.
echo %YELLOW%Para mais ajuda, consulte o README.md%RESET%
echo.
pause
exit /b 1